{"mappings":"AAAA,MAAMA,EAAUC,SAASC,cAAc,QAEvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,aAAY,KACNH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbL,EAAQa,iBAAiB,UAAUC,IACjCA,EAAMC,iBAEN,MAAMC,EAAQC,SAASjB,EAAQkB,SAASb,MAAMc,OACxCC,EAAOH,SAASjB,EAAQkB,SAASE,KAAKD,OACtCE,EAASJ,SAASjB,EAAQkB,SAASG,OAAOF,OAEhD,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1BnB,EAAcmB,EAAI,EAAGN,EAAQM,EAAIF,GAC9BG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,QAAQC,IAAI,uBAAqBrB,QAAiBC,MAAU,IAE7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBmB,QAAQC,IAAI,sBAAoBrB,QAAeC,MAAU,GACzD","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = parseInt(formRef.elements.delay.value);\n  const step = parseInt(formRef.elements.step.value);\n  const amount = parseInt(formRef.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.415e2ecc.js.map"}